{
  "$defs": {
    "S3Config": {
      "additionalProperties": false,
      "description": "S3-specific config params.\nInherit your config class from this class if you need\nto talk to an S3 service in the backend.\n\nArgs:\n    s3_endpoint_url (str): The URL to the S3 endpoint.\n    s3_access_key_id (str):\n        Part of credentials for login into the S3 service. See:\n        https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html\n    s3_secret_access_key (str):\n        Part of credentials for login into the S3 service. See:\n        https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html\n    s3_session_token (Optional[str]):\n        Optional part of credentials for login into the S3 service. See:\n        https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html\n    aws_config_ini (Optional[Path]):\n        Path to a config file for specifying more advanced S3 parameters.\n        This should follow the format described here:\n        https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html#using-a-configuration-file\n        Defaults to None.",
      "properties": {
        "s3_endpoint_url": {
          "description": "URL to the S3 API.",
          "examples": [
            "http://localhost:4566"
          ],
          "title": "S3 Endpoint Url",
          "type": "string"
        },
        "s3_access_key_id": {
          "description": "Part of credentials for login into the S3 service. See: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html",
          "examples": [
            "my-access-key-id"
          ],
          "title": "S3 Access Key Id",
          "type": "string"
        },
        "s3_secret_access_key": {
          "description": "Part of credentials for login into the S3 service. See: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html",
          "examples": [
            "my-secret-access-key"
          ],
          "format": "password",
          "title": "S3 Secret Access Key",
          "type": "string",
          "writeOnly": true
        },
        "s3_session_token": {
          "anyOf": [
            {
              "format": "password",
              "type": "string",
              "writeOnly": true
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Part of credentials for login into the S3 service. See: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html",
          "examples": [
            "my-session-token"
          ],
          "title": "S3 Session Token"
        },
        "aws_config_ini": {
          "anyOf": [
            {
              "format": "path",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Path to a config file for specifying more advanced S3 parameters. This should follow the format described here: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html#using-a-configuration-file",
          "examples": [
            "~/.aws/config"
          ],
          "title": "Aws Config Ini"
        }
      },
      "required": [
        "s3_endpoint_url",
        "s3_access_key_id",
        "s3_secret_access_key"
      ],
      "title": "S3Config",
      "type": "object"
    },
    "S3ObjectStorageNodeConfig": {
      "additionalProperties": false,
      "description": "Configuration for one specific object storage node and one bucket in it.\n\nThe bucket is the main bucket that the service is responsible for.",
      "properties": {
        "bucket": {
          "title": "Bucket",
          "type": "string"
        },
        "credentials": {
          "$ref": "#/$defs/S3Config"
        }
      },
      "required": [
        "bucket",
        "credentials"
      ],
      "title": "S3ObjectStorageNodeConfig",
      "type": "object"
    }
  },
  "additionalProperties": false,
  "description": "Modifies the original Settings class provided by the user",
  "properties": {
    "files_to_stage_topic": {
      "description": "Name of the topic used for events indicating that a download was requested for a file that is not yet available in the outbox.",
      "examples": [
        "file-downloads",
        "file-stage-requests"
      ],
      "title": "Files To Stage Topic",
      "type": "string"
    },
    "unstaged_download_collection": {
      "description": "The type used for event indicating that a download was requested for a file that is not yet available in the outbox. The value should use hyphens in place of underscores if needed.",
      "examples": [
        "unstagedDownloadRequested"
      ],
      "title": "Unstaged Download Collection",
      "type": "string"
    },
    "file_deletion_request_topic": {
      "description": "The name of the topic to receive events informing about files to delete.",
      "examples": [
        "file-deletion-requests"
      ],
      "title": "File Deletion Request Topic",
      "type": "string"
    },
    "log_level": {
      "default": "INFO",
      "description": "The minimum log level to capture.",
      "enum": [
        "CRITICAL",
        "ERROR",
        "WARNING",
        "INFO",
        "DEBUG",
        "TRACE"
      ],
      "title": "Log Level",
      "type": "string"
    },
    "service_name": {
      "default": "dcs",
      "title": "Service Name",
      "type": "string"
    },
    "service_instance_id": {
      "description": "A string that uniquely identifies this instance across all instances of this service. A globally unique Kafka client ID will be created by concatenating the service_name and the service_instance_id.",
      "examples": [
        "germany-bw-instance-001"
      ],
      "title": "Service Instance Id",
      "type": "string"
    },
    "log_format": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "If set, will replace JSON formatting with the specified string format. If not set, has no effect. In addition to the standard attributes, the following can also be specified: timestamp, service, instance, level, correlation_id, and details",
      "examples": [
        "%(timestamp)s - %(service)s - %(level)s - %(message)s",
        "%(asctime)s - Severity: %(levelno)s - %(msg)s"
      ],
      "title": "Log Format"
    },
    "log_traceback": {
      "default": true,
      "description": "Whether to include exception tracebacks in log messages.",
      "title": "Log Traceback",
      "type": "boolean"
    },
    "object_storages": {
      "additionalProperties": {
        "$ref": "#/$defs/S3ObjectStorageNodeConfig"
      },
      "title": "Object Storages",
      "type": "object"
    },
    "file_internally_registered_topic": {
      "description": "Name of the topic used for events indicating that a file has been registered for download.",
      "examples": [
        "file-registrations",
        "file-registrations-internal"
      ],
      "title": "File Internally Registered Topic",
      "type": "string"
    },
    "file_internally_registered_type": {
      "description": "The type used for event indicating that that a file has been registered for download.",
      "examples": [
        "file_internally_registered"
      ],
      "title": "File Internally Registered Type",
      "type": "string"
    },
    "file_registered_for_download_topic": {
      "description": "Name of the topic used for events indicating that a file has been registered by the DCS for download.",
      "examples": [
        "file-registrations",
        "file-registrations-download"
      ],
      "title": "File Registered For Download Topic",
      "type": "string"
    },
    "file_registered_for_download_type": {
      "description": "The type used for event indicating that a file has been registered by the DCS for download.",
      "examples": [
        "file_registered_for_download"
      ],
      "title": "File Registered For Download Type",
      "type": "string"
    },
    "file_deleted_topic": {
      "description": "Name of the topic used for events indicating that a file has been deleted.",
      "examples": [
        "file-deletions"
      ],
      "title": "File Deleted Topic",
      "type": "string"
    },
    "file_deleted_type": {
      "description": "The type used for events indicating that a file has been deleted.",
      "examples": [
        "file_deleted"
      ],
      "title": "File Deleted Type",
      "type": "string"
    },
    "download_served_topic": {
      "description": "Name of the topic used for events indicating that a download of a specified file happened.",
      "examples": [
        "file-downloads"
      ],
      "title": "Download Served Topic",
      "type": "string"
    },
    "download_served_type": {
      "description": "The type used for event indicating that a download of a specified file happened.",
      "examples": [
        "download_served"
      ],
      "title": "Download Served Type",
      "type": "string"
    },
    "kafka_servers": {
      "description": "A list of connection strings to connect to Kafka bootstrap servers.",
      "examples": [
        [
          "localhost:9092"
        ]
      ],
      "items": {
        "type": "string"
      },
      "title": "Kafka Servers",
      "type": "array"
    },
    "kafka_security_protocol": {
      "default": "PLAINTEXT",
      "description": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL.",
      "enum": [
        "PLAINTEXT",
        "SSL"
      ],
      "title": "Kafka Security Protocol",
      "type": "string"
    },
    "kafka_ssl_cafile": {
      "default": "",
      "description": "Certificate Authority file path containing certificates used to sign broker certificates. If a CA is not specified, the default system CA will be used if found by OpenSSL.",
      "title": "Kafka Ssl Cafile",
      "type": "string"
    },
    "kafka_ssl_certfile": {
      "default": "",
      "description": "Optional filename of client certificate, as well as any CA certificates needed to establish the certificate's authenticity.",
      "title": "Kafka Ssl Certfile",
      "type": "string"
    },
    "kafka_ssl_keyfile": {
      "default": "",
      "description": "Optional filename containing the client private key.",
      "title": "Kafka Ssl Keyfile",
      "type": "string"
    },
    "kafka_ssl_password": {
      "default": "",
      "description": "Optional password to be used for the client private key.",
      "format": "password",
      "title": "Kafka Ssl Password",
      "type": "string",
      "writeOnly": true
    },
    "generate_correlation_id": {
      "default": true,
      "description": "A flag, which, if False, will result in an error when inbound requests don't possess a correlation ID. If True, requests without a correlation ID will be assigned a newly generated ID in the correlation ID middleware function.",
      "examples": [
        true,
        false
      ],
      "title": "Generate Correlation Id",
      "type": "boolean"
    },
    "kafka_max_message_size": {
      "default": 1048576,
      "description": "The largest message size that can be transmitted, in bytes. Only services that have a need to send/receive larger messages should set this.",
      "examples": [
        1048576,
        16777216
      ],
      "exclusiveMinimum": 0,
      "title": "Kafka Max Message Size",
      "type": "integer"
    },
    "kafka_max_retries": {
      "default": 0,
      "description": "The maximum number of times to immediately retry consuming an event upon failure. Works independently of the dead letter queue.",
      "examples": [
        0,
        1,
        2,
        3,
        5
      ],
      "minimum": 0,
      "title": "Kafka Max Retries",
      "type": "integer"
    },
    "kafka_enable_dlq": {
      "default": false,
      "description": "A flag to toggle the dead letter queue. If set to False, the service will crash upon exhausting retries instead of publishing events to the DLQ. If set to True, the service will publish events to the DLQ topic after exhausting all retries",
      "examples": [
        true,
        false
      ],
      "title": "Kafka Enable DLQ",
      "type": "boolean"
    },
    "kafka_dlq_topic": {
      "default": "dlq",
      "description": "The name of the topic used to resolve error-causing events.",
      "examples": [
        "dlq"
      ],
      "title": "Kafka DLQ Topic",
      "type": "string"
    },
    "kafka_retry_backoff": {
      "default": 0,
      "description": "The number of seconds to wait before retrying a failed event. The backoff time is doubled for each retry attempt.",
      "examples": [
        0,
        1,
        2,
        3,
        5
      ],
      "minimum": 0,
      "title": "Kafka Retry Backoff",
      "type": "integer"
    },
    "mongo_dsn": {
      "description": "MongoDB connection string. Might include credentials. For more information see: https://naiveskill.com/mongodb-connection-string/",
      "examples": [
        "mongodb://localhost:27017"
      ],
      "format": "multi-host-uri",
      "minLength": 1,
      "title": "Mongo Dsn",
      "type": "string"
    },
    "db_name": {
      "description": "Name of the database located on the MongoDB server.",
      "examples": [
        "my-database"
      ],
      "title": "Db Name",
      "type": "string"
    },
    "mongo_timeout": {
      "anyOf": [
        {
          "exclusiveMinimum": 0,
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Timeout in seconds for API calls to MongoDB. The timeout applies to all steps needed to complete the operation, including server selection, connection checkout, serialization, and server-side execution. When the timeout expires, PyMongo raises a timeout exception. If set to None, the operation will not time out (default MongoDB behavior).",
      "examples": [
        300,
        600,
        null
      ],
      "title": "Mongo Timeout"
    },
    "db_version_collection": {
      "description": "The name of the collection containing DB version information for this service",
      "examples": [
        "dcsDbVersions"
      ],
      "title": "Db Version Collection",
      "type": "string"
    },
    "migration_wait_sec": {
      "description": "The number of seconds to wait before checking the DB version again",
      "examples": [
        5,
        30,
        180
      ],
      "title": "Migration Wait Sec",
      "type": "integer"
    },
    "drs_server_uri": {
      "description": "The base of the DRS URI to access DRS objects. Has to start with 'drs://' and end with '/'.",
      "examples": [
        "drs://localhost:8080/"
      ],
      "title": "DRS server URI",
      "type": "string"
    },
    "staging_speed": {
      "default": 100,
      "description": "When trying to access a DRS object that is not yet in the outbox, assume that this many megabytes can be staged per second.",
      "examples": [
        100,
        500
      ],
      "title": "Staging speed in MB/s",
      "type": "integer"
    },
    "retry_after_min": {
      "default": 5,
      "description": "When trying to access a DRS object that is not yet in the outbox, wait at least this number of seconds before trying again.",
      "examples": [
        5,
        10
      ],
      "title": "Minimum retry time in seconds when staging",
      "type": "integer"
    },
    "retry_after_max": {
      "default": 300,
      "description": "When trying to access a DRS object that is not yet in the outbox, wait at most this number of seconds before trying again.",
      "examples": [
        30,
        300
      ],
      "title": "Maximum retry time in seconds when staging",
      "type": "integer"
    },
    "ekss_base_url": {
      "description": "URL containing host and port of the EKSS endpoint to retrieve personalized envelope from",
      "examples": [
        "http://ekss:8080/"
      ],
      "title": "EKSS base URL",
      "type": "string"
    },
    "presigned_url_expires_after": {
      "description": "Expiration time in seconds for presigned URLS. Positive integer required",
      "examples": [
        30,
        60
      ],
      "exclusiveMinimum": 0,
      "title": "Presigned URL expiration time in seconds",
      "type": "integer"
    },
    "outbox_cache_timeout": {
      "default": 7,
      "description": "Time in days since last access after which a file present in the outbox should be unstaged and has to be requested from permanent storage again for the next request.",
      "examples": [
        7,
        30
      ],
      "title": "Outbox Cache Timeout",
      "type": "integer"
    },
    "auth_key": {
      "description": "The GHGA internal public key for validating the token signature.",
      "examples": [
        "{\"crv\": \"P-256\", \"kty\": \"EC\", \"x\": \"...\", \"y\": \"...\"}"
      ],
      "title": "Internal public key",
      "type": "string"
    },
    "auth_algs": {
      "default": [
        "ES256"
      ],
      "description": "A list of all algorithms used for signing GHGA internal tokens.",
      "items": {
        "type": "string"
      },
      "title": "Auth Algs",
      "type": "array"
    },
    "auth_check_claims": {
      "default": {
        "type": null,
        "file_id": null,
        "user_id": null,
        "user_public_crypt4gh_key": null,
        "full_user_name": null,
        "email": null,
        "iat": null,
        "exp": null
      },
      "description": "A dict of all GHGA internal claims that shall be verified.",
      "title": "Auth Check Claims",
      "type": "object"
    },
    "auth_map_claims": {
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "description": "A mapping of claims to attributes in the GHGA auth context.",
      "title": "Auth Map Claims",
      "type": "object"
    },
    "host": {
      "default": "127.0.0.1",
      "description": "IP of the host.",
      "title": "Host",
      "type": "string"
    },
    "port": {
      "default": 8080,
      "description": "Port to expose the server on the specified host",
      "title": "Port",
      "type": "integer"
    },
    "auto_reload": {
      "default": false,
      "description": "A development feature. Set to `True` to automatically reload the server upon code changes",
      "title": "Auto Reload",
      "type": "boolean"
    },
    "workers": {
      "default": 1,
      "description": "Number of workers processes to run.",
      "title": "Workers",
      "type": "integer"
    },
    "api_root_path": {
      "default": "",
      "description": "Root path at which the API is reachable. This is relative to the specified host and port.",
      "title": "Api Root Path",
      "type": "string"
    },
    "openapi_url": {
      "default": "/openapi.json",
      "description": "Path to get the openapi specification in JSON format. This is relative to the specified host and port.",
      "title": "Openapi Url",
      "type": "string"
    },
    "docs_url": {
      "default": "/docs",
      "description": "Path to host the swagger documentation. This is relative to the specified host and port.",
      "title": "Docs Url",
      "type": "string"
    },
    "cors_allowed_origins": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of origins that should be permitted to make cross-origin requests. By default, cross-origin requests are not allowed. You can use ['*'] to allow any origin.",
      "examples": [
        [
          "https://example.org",
          "https://www.example.org"
        ]
      ],
      "title": "Cors Allowed Origins"
    },
    "cors_allow_credentials": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Indicate that cookies should be supported for cross-origin requests. Defaults to False. Also, cors_allowed_origins cannot be set to ['*'] for credentials to be allowed. The origins must be explicitly specified.",
      "examples": [
        [
          "https://example.org",
          "https://www.example.org"
        ]
      ],
      "title": "Cors Allow Credentials"
    },
    "cors_allowed_methods": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of HTTP methods that should be allowed for cross-origin requests. Defaults to ['GET']. You can use ['*'] to allow all standard methods.",
      "examples": [
        [
          "*"
        ]
      ],
      "title": "Cors Allowed Methods"
    },
    "cors_allowed_headers": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of HTTP request headers that should be supported for cross-origin requests. Defaults to []. You can use ['*'] to allow all headers. The Accept, Accept-Language, Content-Language and Content-Type headers are always allowed for CORS requests.",
      "examples": [
        []
      ],
      "title": "Cors Allowed Headers"
    },
    "api_route": {
      "default": "/ga4gh/drs/v1",
      "description": "DRS API route",
      "title": "Api Route",
      "type": "string"
    }
  },
  "required": [
    "files_to_stage_topic",
    "unstaged_download_collection",
    "file_deletion_request_topic",
    "service_instance_id",
    "object_storages",
    "file_internally_registered_topic",
    "file_internally_registered_type",
    "file_registered_for_download_topic",
    "file_registered_for_download_type",
    "file_deleted_topic",
    "file_deleted_type",
    "download_served_topic",
    "download_served_type",
    "kafka_servers",
    "mongo_dsn",
    "db_name",
    "db_version_collection",
    "migration_wait_sec",
    "drs_server_uri",
    "ekss_base_url",
    "presigned_url_expires_after",
    "auth_key"
  ],
  "title": "ModSettings",
  "type": "object"
}