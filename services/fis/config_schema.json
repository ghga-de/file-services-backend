{
  "additionalProperties": false,
  "description": "Modifies the original Settings class provided by the user",
  "properties": {
    "enable_opentelemetry": {
      "default": false,
      "description": "If set to true, this will run necessary setup code.If set to false, environment variables are set that should also effectively disable autoinstrumentation.",
      "title": "Enable Opentelemetry",
      "type": "boolean"
    },
    "otel_trace_sampling_rate": {
      "default": 1.0,
      "description": "Determines which proportion of spans should be sampled. A value of 1.0 means all and is equivalent to the previous behaviour. Setting this to 0 will result in no spans being sampled, but this does not automatically set `enable_opentelemetry` to False.",
      "maximum": 1,
      "minimum": 0,
      "title": "Otel Trace Sampling Rate",
      "type": "number"
    },
    "log_level": {
      "default": "INFO",
      "description": "The minimum log level to capture.",
      "enum": [
        "CRITICAL",
        "ERROR",
        "WARNING",
        "INFO",
        "DEBUG",
        "TRACE"
      ],
      "title": "Log Level",
      "type": "string"
    },
    "service_name": {
      "default": "fis",
      "title": "Service Name",
      "type": "string"
    },
    "service_instance_id": {
      "description": "A string that uniquely identifies this instance across all instances of this service. A globally unique Kafka client ID will be created by concatenating the service_name and the service_instance_id.",
      "examples": [
        "germany-bw-instance-001"
      ],
      "title": "Service Instance Id",
      "type": "string"
    },
    "log_format": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "If set, will replace JSON formatting with the specified string format. If not set, has no effect. In addition to the standard attributes, the following can also be specified: timestamp, service, instance, level, correlation_id, and details",
      "examples": [
        "%(timestamp)s - %(service)s - %(level)s - %(message)s",
        "%(asctime)s - Severity: %(levelno)s - %(msg)s"
      ],
      "title": "Log Format"
    },
    "log_traceback": {
      "default": true,
      "description": "Whether to include exception tracebacks in log messages.",
      "title": "Log Traceback",
      "type": "boolean"
    },
    "vault_url": {
      "description": "URL of the vault instance to connect to",
      "examples": [
        "http://127.0.0.1.8200"
      ],
      "title": "Vault Url",
      "type": "string"
    },
    "vault_role_id": {
      "anyOf": [
        {
          "format": "password",
          "type": "string",
          "writeOnly": true
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Vault role ID to access a specific prefix",
      "examples": [
        "example_role"
      ],
      "title": "Vault Role Id"
    },
    "vault_secret_id": {
      "anyOf": [
        {
          "format": "password",
          "type": "string",
          "writeOnly": true
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Vault secret ID to access a specific prefix",
      "examples": [
        "example_secret"
      ],
      "title": "Vault Secret Id"
    },
    "vault_verify": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string"
        }
      ],
      "default": true,
      "description": "SSL certificates (CA bundle) used to verify the identity of the vault, or True to use the default CAs, or False for no verification.",
      "examples": [
        "/etc/ssl/certs/my_bundle.pem"
      ],
      "title": "Vault Verify"
    },
    "vault_path": {
      "description": "Path without leading or trailing slashes where secrets should be stored in the vault.",
      "title": "Vault Path",
      "type": "string"
    },
    "vault_secrets_mount_point": {
      "default": "secret",
      "description": "Name used to address the secret engine under a custom mount path.",
      "examples": [
        "secret"
      ],
      "title": "Vault Secrets Mount Point",
      "type": "string"
    },
    "vault_kube_role": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Vault role name used for Kubernetes authentication",
      "examples": [
        "file-ingest-role"
      ],
      "title": "Vault Kube Role"
    },
    "vault_auth_mount_point": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Adapter specific mount path for the corresponding auth backend. If none is provided, the default is used.",
      "examples": [
        null,
        "approle",
        "kubernetes"
      ],
      "title": "Vault Auth Mount Point"
    },
    "service_account_token_path": {
      "default": "/var/run/secrets/kubernetes.io/serviceaccount/token",
      "description": "Path to service account token used by kube auth adapter.",
      "format": "path",
      "title": "Service Account Token Path",
      "type": "string"
    },
    "private_key_path": {
      "description": "Path to the Crypt4GH private key file of the keypair whose public key is used to encrypt the payload.",
      "format": "path",
      "title": "Private Key Path",
      "type": "string"
    },
    "private_key_passphrase": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Passphrase needed to read the content of the private key file. Only needed if the private key is encrypted.",
      "title": "Private Key Passphrase"
    },
    "token_hashes": {
      "description": "List of token hashes corresponding to the tokens that can be used to authenticate calls to this service.",
      "items": {
        "type": "string"
      },
      "title": "Token Hashes",
      "type": "array"
    },
    "file_interrogations_topic": {
      "description": "The name of the topic use to publish file interrogation outcome events.",
      "examples": [
        "file-interrogations"
      ],
      "title": "File Interrogations Topic",
      "type": "string"
    },
    "interrogation_success_type": {
      "description": "The type used for events informing about successful file validations.",
      "examples": [
        "file_interrogation_success"
      ],
      "title": "Interrogation Success Type",
      "type": "string"
    },
    "host": {
      "default": "127.0.0.1",
      "description": "IP of the host.",
      "title": "Host",
      "type": "string"
    },
    "port": {
      "default": 8080,
      "description": "Port to expose the server on the specified host",
      "title": "Port",
      "type": "integer"
    },
    "auto_reload": {
      "default": false,
      "description": "A development feature. Set to `True` to automatically reload the server upon code changes",
      "title": "Auto Reload",
      "type": "boolean"
    },
    "workers": {
      "default": 1,
      "description": "Number of workers processes to run.",
      "title": "Workers",
      "type": "integer"
    },
    "api_root_path": {
      "default": "",
      "description": "Root path at which the API is reachable. This is relative to the specified host and port.",
      "title": "Api Root Path",
      "type": "string"
    },
    "openapi_url": {
      "default": "/openapi.json",
      "description": "Path to get the openapi specification in JSON format. This is relative to the specified host and port.",
      "title": "Openapi Url",
      "type": "string"
    },
    "docs_url": {
      "default": "/docs",
      "description": "Path to host the swagger documentation. This is relative to the specified host and port.",
      "title": "Docs Url",
      "type": "string"
    },
    "cors_allowed_origins": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of origins that should be permitted to make cross-origin requests. By default, cross-origin requests are not allowed. You can use ['*'] to allow any origin.",
      "examples": [
        [
          "https://example.org",
          "https://www.example.org"
        ]
      ],
      "title": "Cors Allowed Origins"
    },
    "cors_allow_credentials": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Indicate that cookies should be supported for cross-origin requests. Defaults to False. Also, cors_allowed_origins cannot be set to ['*'] for credentials to be allowed. The origins must be explicitly specified.",
      "examples": [
        [
          "https://example.org",
          "https://www.example.org"
        ]
      ],
      "title": "Cors Allow Credentials"
    },
    "cors_allowed_methods": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of HTTP methods that should be allowed for cross-origin requests. Defaults to ['GET']. You can use ['*'] to allow all standard methods.",
      "examples": [
        [
          "*"
        ]
      ],
      "title": "Cors Allowed Methods"
    },
    "cors_allowed_headers": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of HTTP request headers that should be supported for cross-origin requests. Defaults to []. You can use ['*'] to allow all headers. The Accept, Accept-Language, Content-Language and Content-Type headers are always allowed for CORS requests.",
      "examples": [
        []
      ],
      "title": "Cors Allowed Headers"
    },
    "generate_correlation_id": {
      "default": true,
      "description": "A flag, which, if False, will result in an error when trying to publish an event without a valid correlation ID set for the context. If True, the a newly correlation ID will be generated and used in the event header.",
      "examples": [
        true,
        false
      ],
      "title": "Generate Correlation Id",
      "type": "boolean"
    },
    "kafka_servers": {
      "description": "A list of connection strings to connect to Kafka bootstrap servers.",
      "examples": [
        [
          "localhost:9092"
        ]
      ],
      "items": {
        "type": "string"
      },
      "title": "Kafka Servers",
      "type": "array"
    },
    "kafka_security_protocol": {
      "default": "PLAINTEXT",
      "description": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL.",
      "enum": [
        "PLAINTEXT",
        "SSL"
      ],
      "title": "Kafka Security Protocol",
      "type": "string"
    },
    "kafka_ssl_cafile": {
      "default": "",
      "description": "Certificate Authority file path containing certificates used to sign broker certificates. If a CA is not specified, the default system CA will be used if found by OpenSSL.",
      "title": "Kafka Ssl Cafile",
      "type": "string"
    },
    "kafka_ssl_certfile": {
      "default": "",
      "description": "Optional filename of client certificate, as well as any CA certificates needed to establish the certificate's authenticity.",
      "title": "Kafka Ssl Certfile",
      "type": "string"
    },
    "kafka_ssl_keyfile": {
      "default": "",
      "description": "Optional filename containing the client private key.",
      "title": "Kafka Ssl Keyfile",
      "type": "string"
    },
    "kafka_ssl_password": {
      "default": "",
      "description": "Optional password to be used for the client private key.",
      "format": "password",
      "title": "Kafka Ssl Password",
      "type": "string",
      "writeOnly": true
    },
    "kafka_max_message_size": {
      "default": 1048576,
      "description": "The largest message size that can be transmitted, in bytes, before compression. Only services that have a need to send/receive larger messages should set this. When used alongside compression, this value can be set to something greater than the broker's `message.max.bytes` field, which effectively concerns the compressed message size.",
      "examples": [
        1048576,
        16777216
      ],
      "exclusiveMinimum": 0,
      "title": "Kafka Max Message Size",
      "type": "integer"
    },
    "kafka_compression_type": {
      "anyOf": [
        {
          "enum": [
            "gzip",
            "snappy",
            "lz4",
            "zstd"
          ],
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "The compression type used for messages. Valid values are: None, gzip, snappy, lz4, and zstd. If None, no compression is applied. This setting is only relevant for the producer and has no effect on the consumer. If set to a value, the producer will compress messages before sending them to the Kafka broker. If unsure, zstd provides a good balance between speed and compression ratio.",
      "examples": [
        null,
        "gzip",
        "snappy",
        "lz4",
        "zstd"
      ],
      "title": "Kafka Compression Type"
    },
    "kafka_max_retries": {
      "default": 0,
      "description": "The maximum number of times to immediately retry consuming an event upon failure. Works independently of the dead letter queue.",
      "examples": [
        0,
        1,
        2,
        3,
        5
      ],
      "minimum": 0,
      "title": "Kafka Max Retries",
      "type": "integer"
    },
    "kafka_enable_dlq": {
      "default": false,
      "description": "A flag to toggle the dead letter queue. If set to False, the service will crash upon exhausting retries instead of publishing events to the DLQ. If set to True, the service will publish events to the DLQ topic after exhausting all retries",
      "examples": [
        true,
        false
      ],
      "title": "Kafka Enable DLQ",
      "type": "boolean"
    },
    "kafka_dlq_topic": {
      "default": "dlq",
      "description": "The name of the topic used to resolve error-causing events.",
      "examples": [
        "dlq"
      ],
      "title": "Kafka DLQ Topic",
      "type": "string"
    },
    "kafka_retry_backoff": {
      "default": 0,
      "description": "The number of seconds to wait before retrying a failed event. The backoff time is doubled for each retry attempt.",
      "examples": [
        0,
        1,
        2,
        3,
        5
      ],
      "minimum": 0,
      "title": "Kafka Retry Backoff",
      "type": "integer"
    },
    "mongo_dsn": {
      "description": "MongoDB connection string. Might include credentials. For more information see: https://naiveskill.com/mongodb-connection-string/",
      "examples": [
        "mongodb://localhost:27017"
      ],
      "format": "multi-host-uri",
      "minLength": 1,
      "title": "Mongo Dsn",
      "type": "string"
    },
    "db_name": {
      "description": "Name of the database located on the MongoDB server.",
      "examples": [
        "my-database"
      ],
      "title": "Db Name",
      "type": "string"
    },
    "mongo_timeout": {
      "anyOf": [
        {
          "exclusiveMinimum": 0,
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Timeout in seconds for API calls to MongoDB. The timeout applies to all steps needed to complete the operation, including server selection, connection checkout, serialization, and server-side execution. When the timeout expires, PyMongo raises a timeout exception. If set to None, the operation will not time out (default MongoDB behavior).",
      "examples": [
        300,
        600,
        null
      ],
      "title": "Mongo Timeout"
    },
    "db_version_collection": {
      "description": "The name of the collection containing DB version information for this service",
      "examples": [
        "ifrsDbVersions"
      ],
      "title": "Db Version Collection",
      "type": "string"
    },
    "migration_wait_sec": {
      "description": "The number of seconds to wait before checking the DB version again",
      "examples": [
        5,
        30,
        180
      ],
      "title": "Migration Wait Sec",
      "type": "integer"
    },
    "migration_max_wait_sec": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "The maximum number of seconds to wait for migrations to complete before raising an error.",
      "examples": [
        null,
        300,
        600,
        3600
      ],
      "title": "Migration Max Wait Sec"
    },
    "file_validations_collection": {
      "default": "fileValidations",
      "description": "The name of the collection used to store FileUploadValidationSuccess events.",
      "examples": [
        "fileValidations"
      ],
      "title": "File Validations Collection",
      "type": "string"
    }
  },
  "required": [
    "service_instance_id",
    "vault_url",
    "vault_path",
    "private_key_path",
    "token_hashes",
    "file_interrogations_topic",
    "interrogation_success_type",
    "kafka_servers",
    "mongo_dsn",
    "db_name",
    "db_version_collection",
    "migration_wait_sec"
  ],
  "title": "ModSettings",
  "type": "object"
}