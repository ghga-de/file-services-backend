{
  "additionalProperties": false,
  "description": "Modifies the original Settings class provided by the user",
  "properties": {
    "enable_opentelemetry": {
      "default": false,
      "description": "If set to true, this will run necessary setup code.If set to false, environment variables are set that should also effectively disable autoinstrumentation.",
      "title": "Enable Opentelemetry",
      "type": "boolean"
    },
    "otel_trace_sampling_rate": {
      "default": 1.0,
      "description": "Determines which proportion of spans should be sampled. A value of 1.0 means all and is equivalent to the previous behaviour. Setting this to 0 will result in no spans being sampled, but this does not automatically set `enable_opentelemetry` to False.",
      "maximum": 1,
      "minimum": 0,
      "title": "Otel Trace Sampling Rate",
      "type": "number"
    },
    "otel_exporter_protocol": {
      "default": "http/protobuf",
      "description": "Specifies which protocol should be used by exporters.",
      "enum": [
        "grpc",
        "http/protobuf"
      ],
      "title": "Otel Exporter Protocol",
      "type": "string"
    },
    "otel_exporter_endpoint": {
      "description": "Base endpoint URL for the collector that receives content from the exporter.",
      "examples": [
        "http://localhost:4318"
      ],
      "format": "uri",
      "minLength": 1,
      "title": "Otel Exporter Endpoint",
      "type": "string"
    },
    "server_private_key_path": {
      "description": "Path to the Crypt4GH private key file",
      "examples": [
        "./key.sec"
      ],
      "format": "path",
      "title": "Server Private Key Path",
      "type": "string"
    },
    "server_public_key_path": {
      "description": "Path to the Crypt4GH public key file",
      "examples": [
        "./key.pub"
      ],
      "format": "path",
      "title": "Server Public Key Path",
      "type": "string"
    },
    "private_key_passphrase": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Passphrase needed to read the content of the private key file. Only needed if the private key is encrypted.",
      "title": "Private Key Passphrase"
    },
    "log_level": {
      "default": "INFO",
      "description": "The minimum log level to capture.",
      "enum": [
        "CRITICAL",
        "ERROR",
        "WARNING",
        "INFO",
        "DEBUG",
        "TRACE"
      ],
      "title": "Log Level",
      "type": "string"
    },
    "service_name": {
      "default": "ekss",
      "title": "Service Name",
      "type": "string"
    },
    "service_instance_id": {
      "description": "A string that uniquely identifies this instance across all instances of this service. This is included in log messages.",
      "examples": [
        "germany-bw-instance-001"
      ],
      "title": "Service Instance Id",
      "type": "string"
    },
    "log_format": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "If set, will replace JSON formatting with the specified string format. If not set, has no effect. In addition to the standard attributes, the following can also be specified: timestamp, service, instance, level, correlation_id, and details",
      "examples": [
        "%(timestamp)s - %(service)s - %(level)s - %(message)s",
        "%(asctime)s - Severity: %(levelno)s - %(msg)s"
      ],
      "title": "Log Format"
    },
    "log_traceback": {
      "default": true,
      "description": "Whether to include exception tracebacks in log messages.",
      "title": "Log Traceback",
      "type": "boolean"
    },
    "vault_url": {
      "description": "URL of the vault instance to connect to",
      "examples": [
        "http://127.0.0.1.8200"
      ],
      "title": "Vault Url",
      "type": "string"
    },
    "vault_role_id": {
      "anyOf": [
        {
          "format": "password",
          "type": "string",
          "writeOnly": true
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Vault role ID to access a specific prefix",
      "examples": [
        "example_role"
      ],
      "title": "Vault Role Id"
    },
    "vault_secret_id": {
      "anyOf": [
        {
          "format": "password",
          "type": "string",
          "writeOnly": true
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Vault secret ID to access a specific prefix",
      "examples": [
        "example_secret"
      ],
      "title": "Vault Secret Id"
    },
    "vault_verify": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string"
        }
      ],
      "default": true,
      "description": "SSL certificates (CA bundle) used to verify the identity of the vault, or True to use the default CAs, or False for no verification.",
      "examples": [
        "/etc/ssl/certs/my_bundle.pem"
      ],
      "title": "Vault Verify"
    },
    "vault_path": {
      "description": "Path without leading or trailing slashes where secrets should be stored in the vault.",
      "title": "Vault Path",
      "type": "string"
    },
    "vault_secrets_mount_point": {
      "default": "secret",
      "description": "Name used to address the secret engine under a custom mount path.",
      "examples": [
        "secret"
      ],
      "title": "Vault Secrets Mount Point",
      "type": "string"
    },
    "vault_kube_role": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Vault role name used for Kubernetes authentication",
      "examples": [
        "file-ingest-role"
      ],
      "title": "Vault Kube Role"
    },
    "vault_auth_mount_point": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Adapter specific mount path for the corresponding auth backend. If none is provided, the default is used.",
      "examples": [
        null,
        "approle",
        "kubernetes"
      ],
      "title": "Vault Auth Mount Point"
    },
    "service_account_token_path": {
      "default": "/var/run/secrets/kubernetes.io/serviceaccount/token",
      "description": "Path to service account token used by kube auth adapter.",
      "format": "path",
      "title": "Service Account Token Path",
      "type": "string"
    },
    "host": {
      "default": "127.0.0.1",
      "description": "IP of the host.",
      "title": "Host",
      "type": "string"
    },
    "port": {
      "default": 8080,
      "description": "Port to expose the server on the specified host",
      "title": "Port",
      "type": "integer"
    },
    "auto_reload": {
      "default": false,
      "description": "A development feature. Set to `True` to automatically reload the server upon code changes",
      "title": "Auto Reload",
      "type": "boolean"
    },
    "workers": {
      "default": 1,
      "description": "Number of workers processes to run.",
      "title": "Workers",
      "type": "integer"
    },
    "api_root_path": {
      "default": "",
      "description": "Root path at which the API is reachable. This is relative to the specified host and port.",
      "title": "Api Root Path",
      "type": "string"
    },
    "openapi_url": {
      "default": "/openapi.json",
      "description": "Path to get the openapi specification in JSON format. This is relative to the specified host and port.",
      "title": "Openapi Url",
      "type": "string"
    },
    "docs_url": {
      "default": "/docs",
      "description": "Path to host the swagger documentation. This is relative to the specified host and port.",
      "title": "Docs Url",
      "type": "string"
    },
    "cors_allowed_origins": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of origins that should be permitted to make cross-origin requests. By default, cross-origin requests are not allowed. You can use ['*'] to allow any origin.",
      "examples": [
        [
          "https://example.org",
          "https://www.example.org"
        ]
      ],
      "title": "Cors Allowed Origins"
    },
    "cors_allow_credentials": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Indicate that cookies should be supported for cross-origin requests. Defaults to False. Also, cors_allowed_origins cannot be set to ['*'] for credentials to be allowed. The origins must be explicitly specified.",
      "examples": [
        [
          "https://example.org",
          "https://www.example.org"
        ]
      ],
      "title": "Cors Allow Credentials"
    },
    "cors_allowed_methods": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of HTTP methods that should be allowed for cross-origin requests. Defaults to ['GET']. You can use ['*'] to allow all standard methods.",
      "examples": [
        [
          "*"
        ]
      ],
      "title": "Cors Allowed Methods"
    },
    "cors_allowed_headers": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of HTTP request headers that should be supported for cross-origin requests. Defaults to []. You can use ['*'] to allow all request headers. The Accept, Accept-Language, Content-Language, Content-Type and some are always allowed for CORS requests.",
      "examples": [
        []
      ],
      "title": "Cors Allowed Headers"
    },
    "cors_exposed_headers": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of HTTP response headers that should be exposed for cross-origin responses. Defaults to []. Note that you can NOT use ['*'] to expose all response headers. The Cache-Control, Content-Language, Content-Length, Content-Type, Expires, Last-Modified and Pragma headers are always exposed for CORS responses.",
      "examples": [
        []
      ],
      "title": "Cors Exposed Headers"
    },
    "generate_correlation_id": {
      "default": true,
      "description": "A flag, which, if False, will result in an error when inbound requests don't possess a correlation ID. If True, requests without a correlation ID will be assigned a newly generated ID in the correlation ID middleware function.",
      "examples": [
        true,
        false
      ],
      "title": "Generate Correlation Id",
      "type": "boolean"
    }
  },
  "required": [
    "otel_exporter_endpoint",
    "server_private_key_path",
    "server_public_key_path",
    "service_instance_id",
    "vault_url",
    "vault_path"
  ],
  "title": "ModSettings",
  "type": "object"
}