# Copyright 2022-2023 Universität Tübingen, DKFZ and EMBL
# for the German Human Genome-Phenome Archive (GHGA)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Steps to run on new commit to main"

on: push

jobs:
  get-changed-services:
    uses: ./.github/workflows/get_affected_services.yaml

  push-to-docker:
    runs-on: ubuntu-latest
    needs: get-changed-services
    strategy:
      matrix:
        service: ${{ fromJson(needs.get-changed-services.outputs.services) }}
      fail-fast: false

    env:
      IFRS_CONFIG_YAML: ./services/ifrs/dev_config.yaml
      IRS_CONFIG_YAML: ./services/irs/dev_config.yaml
      PCS_CONFIG_YAML: ./services/pcs/dev_config.yaml

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python 3.12
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Extract service name for ${{ matrix.service }}
        id: extract-service-name
        shell: bash
        run: |
          echo service-name=$(python3 scripts/service_name.py ${{ matrix.service }}) >> $GITHUB_OUTPUT

      - name: Extract service version for ${{ matrix.service }}
        id: extract-service-version
        shell: bash
        run: |
          echo version=$(python3.12 -c "import tomllib; print(tomllib.load(open('services/${{ matrix.service }}/pyproject.toml', 'rb'))['project']['version'])") >> $GITHUB_OUTPUT

      - name: Symlink requirement files
        id: symlink-requirements
        run: ln -sf lock services/${{ matrix.service }}/lock

      - name: Prepare Dockerfile
        id: prepare-dockerfile
        run: cp Dockerfile services/${{ matrix.service }}/ && sed -i "s/\(ENTRYPOINT \)\[\]/\1[\"${{ matrix.service }}\"]/" services/${{ matrix.service }}/Dockerfile

      - name: Build and push ${{ matrix.service }} to Docker hub
        id: docker-push
        uses: ./reusable_workflows/docker_debug
        with:
          working_directory: services/${{ matrix.service }}
          service_name: ${{ steps.extract-service-name.outputs.service-name }}
          version: ${{ steps.extract-service-version.outputs.version }}
